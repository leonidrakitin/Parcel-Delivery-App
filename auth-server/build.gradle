plugins {
	id 'java'
  id 'jacoco'
  id 'org.liquibase.gradle' version '2.2.0'
	id 'org.springframework.boot' version '2.7.9'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.parceldelivery'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'
description = 'Authentication Server'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2021.0.6")
}

dependencies {
  implementation project(':shared')

  // Security
  implementation 'org.springframework.boot:spring-boot-starter-security'
  implementation 'com.auth0:java-jwt:4.4.0'

  implementation 'org.springframework.cloud:spring-cloud-starter'
  implementation 'org.springframework.boot:spring-boot-starter-hateoas'

  // Spring Cloud
  implementation 'org.springframework.cloud:spring-cloud-starter-config'
  implementation ('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client') {
    exclude group: 'org.springframework.cloud', module: 'spring-cloud-starter-ribbon'
    exclude group: 'com.netflix.ribbon', module: 'ribbon-eureka'
  }
  implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'

  // Spring Boot
  implementation 'org.springframework.boot:spring-boot-starter-actuator'
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-validation'

  // Database
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'org.postgresql:postgresql'

  // Liquibase
  runtimeOnly("org.liquibase:liquibase-core")
  liquibaseRuntime 'org.liquibase:liquibase-core'
  liquibaseRuntime 'info.picocli:picocli:4.6.1'
  liquibaseRuntime 'org.postgresql:postgresql'
  liquibaseRuntime 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.13.1'

  // SpringDoc
  implementation 'org.springdoc:springdoc-openapi-ui:1.6.15'

  // Monitoring
  implementation 'org.springframework.boot:spring-boot-starter-actuator'
  implementation 'io.micrometer:micrometer-registry-prometheus'
  implementation 'io.micrometer:micrometer-core'

  // Lombok
  compileOnly 'org.projectlombok:lombok'
  testCompileOnly 'org.projectlombok:lombok'
  annotationProcessor 'org.projectlombok:lombok'

  // Test
  testImplementation project(':shared-test')
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'org.springframework.security:spring-security-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
  finalizedBy jacocoTestReport
}

jacocoTestReport {
  dependsOn test
}

jacocoTestReport {
  reports {
    csv.enabled = true
  }
}